//sumofmatrix
#include <stdio.h>
#define row 2
#define col 2

int main()
{
    int matrix1[row][col] , matrix2[row][col] , sum[row][col], i ,j;
    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           printf("Enter 1st matrix [%d][%d]'s element\n",i,j);
           scanf("%d",&matrix1[i][j]);
        }
        
    }

    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           printf("Enter 2st matrix [%d][%d]'s element\n",i,j);
           scanf("%d",&matrix2[i][j]);
        }
        
    }

    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           sum[i][j] = matrix1[i][j] + matrix2[i][j];
        }
        
    }

    printf("the result is :\n");
    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           printf("%d\t", sum[i][j]);
           
        }
        printf("\n");
        
    }

    

    

    return 0;
}



//armstong
#include<stdio.h>
int main()
{
	int n,digit,sum=0;

	printf("Enter the number");
	scanf("%d",&n);
		int m=n;
	while(m!=0)
	{
		digit=m%10;
		sum=sum+digit*digit*digit;
		m=m/10;
	}
	if(n==sum)
	{
		printf("%d is the armstrong number",n);
	}
	else
	printf("%d is not the armstrong number",n);
	
	return 0;
}


//factorial
//program to find factorial number
#include<stdio.h>
int main()
{
	int c=1, i ,n;
	printf("Enter the number\n");
	scanf("%d", &n);
	
	for (i=1; i<=n ; i++)
	{
		c= c*i;
	
		
	}
 printf("Factorial of %d is: %d",n,c);    
	
}



//rooots
#include<stdio.h>
#include<math.h>

void main()
{
	float a,b,c,x1,x2,d;
	printf("\n Enter the coeffients");
	scanf("%f %f %f",&a,&b,&c);
	
	d=b*b-4*a*c;
	if(d<0)
	{
		printf("\n The roots are imaginary");
	}
	else
	{
		d= sqrt(d);
		x1= (-b+d)/(2*a);
		x2= (-b-d)/(2*a);
		printf("\n x1=%f \n x2=%f",x1,x2);
	}
	
	
}


//transpose
#include <stdio.h>
#define row 2
#define col 2

int main()
{
    int matrix1[row][col] , transpose[row][col] ,i ,j;
    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           printf("Enter 1st matrix [%d][%d]'s element\n",i,j);
           scanf("%d",&matrix1[i][j]);
        }
        
    }



    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           transpose[i][j] = matrix1[j][i];
        }
        
    }

    printf("the result is :\n");
    for ( i = 0; i < row; i++)
    {
        for ( j = 0; j < col; j++)
        {
           printf("%d\t", transpose[i][j]);
           
        }
        printf("\n");
        
    }

    

    

    return 0;
}


//fibonachi

#include <stdio.h>


int main()
{
  int a=0,b=1,n,i;
  printf("Enter the no of fibonachi terms\n");
  scanf("%d",&n);
  for ( i = 2; i < n; i++)
  {
    printf("%d\t",a);
    printf("%d\t",b);
    a=a+b;
    b =a+b;
  }
  
    return 0;
}

//factorialbyrecursive

#include <stdio.h>

int factorial(int n)
{
    if (n == 1)
    {
        return 1;
    }
    return n * factorial(n-1);
    
}

int main()
{
  int n,fact;
  printf("Enter the no of for factorial\n");
  scanf("%d",&n);
  fact =  factorial(n);
  printf("factorial is %d",fact);
  
    return 0;
}


//primecomposite

//program to check prime number
#include<stdio.h>
void main()
{
int n, i;
printf("n Enter the number n");
scanf("%d",&n);
for(i=2; i<=n/2; i++)
{
if(n%i==0)
{
printf("n %d is composite",n);
exit(0);
}
}
{
printf("%d is prime",n);
}
exit(0);
}
